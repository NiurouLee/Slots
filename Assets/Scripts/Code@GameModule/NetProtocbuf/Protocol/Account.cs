// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ilruntime.Protobuf;
using pbc = global::Google.ilruntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace DragonU3DSDK.Network.API.ILProtocol {

  #region Messages
  public sealed class CLogin : pb::IMessage {
    private static readonly pb::MessageParser<CLogin> _parser = new pb::MessageParser<CLogin>(() => new CLogin());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CLogin> Parser { get { return _parser; } }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 2;
    private string checksum_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Checksum {
      get { return checksum_; }
      set {
        checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_token" field.</summary>
    public const int FacebookTokenFieldNumber = 4;
    private string facebookToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookToken {
      get { return facebookToken_; }
      set {
        facebookToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "old_device_id" field.</summary>
    public const int OldDeviceIdFieldNumber = 7;
    private string oldDeviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OldDeviceId {
      get { return oldDeviceId_; }
      set {
        oldDeviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjust_id" field.</summary>
    public const int AdjustIdFieldNumber = 8;
    private string adjustId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdjustId {
      get { return adjustId_; }
      set {
        adjustId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 16;
    private global::DragonU3DSDK.Network.API.ILProtocol.Platform platform_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DragonU3DSDK.Network.API.ILProtocol.Platform Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "invite_code" field.</summary>
    public const int InviteCodeFieldNumber = 17;
    private string inviteCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idfa" field.</summary>
    public const int IdfaFieldNumber = 18;
    private string idfa_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idfa {
      get { return idfa_; }
      set {
        idfa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idfv" field.</summary>
    public const int IdfvFieldNumber = 19;
    private string idfv_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idfv {
      get { return idfv_; }
      set {
        idfv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mac" field.</summary>
    public const int MacFieldNumber = 20;
    private string mac_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mac {
      get { return mac_; }
      set {
        mac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "android_id" field.</summary>
    public const int AndroidIdFieldNumber = 21;
    private string androidId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AndroidId {
      get { return androidId_; }
      set {
        androidId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_adid" field.</summary>
    public const int GpsAdidFieldNumber = 22;
    private string gpsAdid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GpsAdid {
      get { return gpsAdid_; }
      set {
        gpsAdid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firebase_instance_id" field.</summary>
    public const int FirebaseInstanceIdFieldNumber = 23;
    private string firebaseInstanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirebaseInstanceId {
      get { return firebaseInstanceId_; }
      set {
        firebaseInstanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 24;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apple_identity_token" field.</summary>
    public const int AppleIdentityTokenFieldNumber = 25;
    private string appleIdentityToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleIdentityToken {
      get { return appleIdentityToken_; }
      set {
        appleIdentityToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apple_authorization_code" field.</summary>
    public const int AppleAuthorizationCodeFieldNumber = 26;
    private string appleAuthorizationCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleAuthorizationCode {
      get { return appleAuthorizationCode_; }
      set {
        appleAuthorizationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (Checksum.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Checksum);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RefreshToken);
      }
      if (FacebookToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FacebookToken);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (OldDeviceId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OldDeviceId);
      }
      if (AdjustId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(AdjustId);
      }
      if (Platform != 0) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) Platform);
      }
      if (InviteCode.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(InviteCode);
      }
      if (Idfa.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Idfa);
      }
      if (Idfv.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Idfv);
      }
      if (Mac.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Mac);
      }
      if (AndroidId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(AndroidId);
      }
      if (GpsAdid.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(GpsAdid);
      }
      if (FirebaseInstanceId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(FirebaseInstanceId);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(GroupId);
      }
      if (AppleIdentityToken.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(AppleIdentityToken);
      }
      if (AppleAuthorizationCode.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(AppleAuthorizationCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Checksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (FacebookToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookToken);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (OldDeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldDeviceId);
      }
      if (AdjustId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdjustId);
      }
      if (Platform != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
      }
      if (InviteCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
      }
      if (Idfa.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Idfa);
      }
      if (Idfv.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Idfv);
      }
      if (Mac.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Mac);
      }
      if (AndroidId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AndroidId);
      }
      if (GpsAdid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GpsAdid);
      }
      if (FirebaseInstanceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FirebaseInstanceId);
      }
      if (GroupId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (AppleIdentityToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppleIdentityToken);
      }
      if (AppleAuthorizationCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppleAuthorizationCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            Checksum = input.ReadString();
            break;
          }
          case 26: {
            RefreshToken = input.ReadString();
            break;
          }
          case 34: {
            FacebookToken = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 58: {
            OldDeviceId = input.ReadString();
            break;
          }
          case 66: {
            AdjustId = input.ReadString();
            break;
          }
          case 128: {
            platform_ = (global::DragonU3DSDK.Network.API.ILProtocol.Platform) input.ReadEnum();
            break;
          }
          case 138: {
            InviteCode = input.ReadString();
            break;
          }
          case 146: {
            Idfa = input.ReadString();
            break;
          }
          case 154: {
            Idfv = input.ReadString();
            break;
          }
          case 162: {
            Mac = input.ReadString();
            break;
          }
          case 170: {
            AndroidId = input.ReadString();
            break;
          }
          case 178: {
            GpsAdid = input.ReadString();
            break;
          }
          case 186: {
            FirebaseInstanceId = input.ReadString();
            break;
          }
          case 194: {
            GroupId = input.ReadString();
            break;
          }
          case 202: {
            AppleIdentityToken = input.ReadString();
            break;
          }
          case 210: {
            AppleAuthorizationCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SLogin : pb::IMessage {
    private static readonly pb::MessageParser<SLogin> _parser = new pb::MessageParser<SLogin>(() => new SLogin());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SLogin> Parser { get { return _parser; } }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private ulong playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 4;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "has_unread_messages" field.</summary>
    public const int HasUnreadMessagesFieldNumber = 6;
    private bool hasUnreadMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnreadMessages {
      get { return hasUnreadMessages_; }
      set {
        hasUnreadMessages_ = value;
      }
    }

    /// <summary>Field number for the "abtests" field.</summary>
    public const int AbtestsFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_abtests_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 58);
    private readonly pbc::MapField<string, string> abtests_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Abtests {
      get { return abtests_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 8;
    private global::DragonU3DSDK.Network.API.ILProtocol.ClientConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DragonU3DSDK.Network.API.ILProtocol.ClientConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "server_status" field.</summary>
    public const int ServerStatusFieldNumber = 9;
    private global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.ServerStatus serverStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.ServerStatus ServerStatus {
      get { return serverStatus_; }
      set {
        serverStatus_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 10;
    private global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.Region region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.Region Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    /// <summary>Field number for the "facebook_id" field.</summary>
    public const int FacebookIdFieldNumber = 11;
    private string facebookId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookId {
      get { return facebookId_; }
      set {
        facebookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_name" field.</summary>
    public const int FacebookNameFieldNumber = 12;
    private string facebookName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookName {
      get { return facebookName_; }
      set {
        facebookName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_email" field.</summary>
    public const int FacebookEmailFieldNumber = 13;
    private string facebookEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookEmail {
      get { return facebookEmail_; }
      set {
        facebookEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expire" field.</summary>
    public const int ExpireFieldNumber = 14;
    private ulong expire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Expire {
      get { return expire_; }
      set {
        expire_ = value;
      }
    }

    /// <summary>Field number for the "has_legacy" field.</summary>
    public const int HasLegacyFieldNumber = 15;
    private bool hasLegacy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLegacy {
      get { return hasLegacy_; }
      set {
        hasLegacy_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 16;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apple_account_id" field.</summary>
    public const int AppleAccountIdFieldNumber = 17;
    private string appleAccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleAccountId {
      get { return appleAccountId_; }
      set {
        appleAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RefreshToken);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Secret);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Timestamp);
      }
      if (HasUnreadMessages != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasUnreadMessages);
      }
      abtests_.WriteTo(output, _map_abtests_codec);
      if (config_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Config);
      }
      if (ServerStatus != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ServerStatus);
      }
      if (region_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Region);
      }
      if (FacebookId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FacebookId);
      }
      if (FacebookName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FacebookName);
      }
      if (FacebookEmail.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FacebookEmail);
      }
      if (Expire != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(Expire);
      }
      if (HasLegacy != false) {
        output.WriteRawTag(120);
        output.WriteBool(HasLegacy);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(GroupId);
      }
      if (AppleAccountId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AppleAccountId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (HasUnreadMessages != false) {
        size += 1 + 1;
      }
      size += abtests_.CalculateSize(_map_abtests_codec);
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (ServerStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServerStatus);
      }
      if (region_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Region);
      }
      if (FacebookId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookId);
      }
      if (FacebookName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookName);
      }
      if (FacebookEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookEmail);
      }
      if (Expire != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Expire);
      }
      if (HasLegacy != false) {
        size += 1 + 1;
      }
      if (GroupId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (AppleAccountId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppleAccountId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PlayerId = input.ReadUInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            RefreshToken = input.ReadString();
            break;
          }
          case 34: {
            Secret = input.ReadString();
            break;
          }
          case 40: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 48: {
            HasUnreadMessages = input.ReadBool();
            break;
          }
          case 58: {
            abtests_.AddEntriesFrom(input, _map_abtests_codec);
            break;
          }
          case 66: {
            if (config_ == null) {
              config_ = new global::DragonU3DSDK.Network.API.ILProtocol.ClientConfig();
            }
            input.ReadMessage(config_);
            break;
          }
          case 72: {
            serverStatus_ = (global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.ServerStatus) input.ReadEnum();
            break;
          }
          case 82: {
            if (region_ == null) {
              region_ = new global::DragonU3DSDK.Network.API.ILProtocol.SLogin.Types.Region();
            }
            input.ReadMessage(region_);
            break;
          }
          case 90: {
            FacebookId = input.ReadString();
            break;
          }
          case 98: {
            FacebookName = input.ReadString();
            break;
          }
          case 106: {
            FacebookEmail = input.ReadString();
            break;
          }
          case 112: {
            Expire = input.ReadUInt64();
            break;
          }
          case 120: {
            HasLegacy = input.ReadBool();
            break;
          }
          case 130: {
            GroupId = input.ReadString();
            break;
          }
          case 138: {
            AppleAccountId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SLogin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static class Types {
      public enum ServerStatus {
        Normal = 0,
        PrepareMaintaining = 1,
        Maintaining = 2,
      }

      /// <summary>
      /// TODO
      /// </summary>
      public sealed class Region : pb::IMessage {
        private static readonly pb::MessageParser<Region> _parser = new pb::MessageParser<Region>(() => new Region());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Region> Parser { get { return _parser; } }

        /// <summary>Field number for the "country_code" field.</summary>
        public const int CountryCodeFieldNumber = 1;
        private string countryCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "country_name" field.</summary>
        public const int CountryNameFieldNumber = 2;
        private string countryName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryName {
          get { return countryName_; }
          set {
            countryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "region_code" field.</summary>
        public const int RegionCodeFieldNumber = 3;
        private string regionCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionCode {
          get { return regionCode_; }
          set {
            regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "region_name" field.</summary>
        public const int RegionNameFieldNumber = 4;
        private string regionName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionName {
          get { return regionName_; }
          set {
            regionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "city" field.</summary>
        public const int CityFieldNumber = 5;
        private string city_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string City {
          get { return city_; }
          set {
            city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "time_zone" field.</summary>
        public const int TimeZoneFieldNumber = 6;
        private string timeZone_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TimeZone {
          get { return timeZone_; }
          set {
            timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CountryCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (CountryName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CountryName);
          }
          if (RegionCode.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RegionCode);
          }
          if (RegionName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(RegionName);
          }
          if (City.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(City);
          }
          if (TimeZone.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TimeZone);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CountryCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (CountryName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryName);
          }
          if (RegionCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
          }
          if (RegionName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionName);
          }
          if (City.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
          }
          if (TimeZone.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 18: {
                CountryName = input.ReadString();
                break;
              }
              case 26: {
                RegionCode = input.ReadString();
                break;
              }
              case 34: {
                RegionName = input.ReadString();
                break;
              }
              case 42: {
                City = input.ReadString();
                break;
              }
              case 50: {
                TimeZone = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed class CBindFacebook : pb::IMessage {
    private static readonly pb::MessageParser<CBindFacebook> _parser = new pb::MessageParser<CBindFacebook>(() => new CBindFacebook());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBindFacebook> Parser { get { return _parser; } }

    /// <summary>Field number for the "facebook_token" field.</summary>
    public const int FacebookTokenFieldNumber = 1;
    private string facebookToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookToken {
      get { return facebookToken_; }
      set {
        facebookToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FacebookToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FacebookToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FacebookToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FacebookToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SBindFacebook : pb::IMessage {
    private static readonly pb::MessageParser<SBindFacebook> _parser = new pb::MessageParser<SBindFacebook>(() => new SBindFacebook());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SBindFacebook> Parser { get { return _parser; } }

    /// <summary>Field number for the "facebook_id" field.</summary>
    public const int FacebookIdFieldNumber = 1;
    private string facebookId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookId {
      get { return facebookId_; }
      set {
        facebookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_name" field.</summary>
    public const int FacebookNameFieldNumber = 2;
    private string facebookName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookName {
      get { return facebookName_; }
      set {
        facebookName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_email" field.</summary>
    public const int FacebookEmailFieldNumber = 3;
    private string facebookEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookEmail {
      get { return facebookEmail_; }
      set {
        facebookEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FacebookId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FacebookId);
      }
      if (FacebookName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FacebookName);
      }
      if (FacebookEmail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FacebookEmail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FacebookId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookId);
      }
      if (FacebookName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookName);
      }
      if (FacebookEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookEmail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FacebookId = input.ReadString();
            break;
          }
          case 18: {
            FacebookName = input.ReadString();
            break;
          }
          case 26: {
            FacebookEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class CUnbindFacebook : pb::IMessage {
    private static readonly pb::MessageParser<CUnbindFacebook> _parser = new pb::MessageParser<CUnbindFacebook>(() => new CUnbindFacebook());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUnbindFacebook> Parser { get { return _parser; } }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SUnbindFacebook : pb::IMessage {
    private static readonly pb::MessageParser<SUnbindFacebook> _parser = new pb::MessageParser<SUnbindFacebook>(() => new SUnbindFacebook());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SUnbindFacebook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CBindEmail : pb::IMessage {
    private static readonly pb::MessageParser<CBindEmail> _parser = new pb::MessageParser<CBindEmail>(() => new CBindEmail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBindEmail> Parser { get { return _parser; } }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SBindEmail : pb::IMessage {
    private static readonly pb::MessageParser<SBindEmail> _parser = new pb::MessageParser<SBindEmail>(() => new SBindEmail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SBindEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CUnbindEmail : pb::IMessage {
    private static readonly pb::MessageParser<CUnbindEmail> _parser = new pb::MessageParser<CUnbindEmail>(() => new CUnbindEmail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUnbindEmail> Parser { get { return _parser; } }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SUnbindEmail : pb::IMessage {
    private static readonly pb::MessageParser<SUnbindEmail> _parser = new pb::MessageParser<SUnbindEmail>(() => new SUnbindEmail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SUnbindEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CBindApple : pb::IMessage {
    private static readonly pb::MessageParser<CBindApple> _parser = new pb::MessageParser<CBindApple>(() => new CBindApple());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBindApple> Parser { get { return _parser; } }

    /// <summary>Field number for the "apple_identity_token" field.</summary>
    public const int AppleIdentityTokenFieldNumber = 1;
    private string appleIdentityToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleIdentityToken {
      get { return appleIdentityToken_; }
      set {
        appleIdentityToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apple_authorization_code" field.</summary>
    public const int AppleAuthorizationCodeFieldNumber = 2;
    private string appleAuthorizationCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleAuthorizationCode {
      get { return appleAuthorizationCode_; }
      set {
        appleAuthorizationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppleIdentityToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppleIdentityToken);
      }
      if (AppleAuthorizationCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppleAuthorizationCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppleIdentityToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppleIdentityToken);
      }
      if (AppleAuthorizationCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppleAuthorizationCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AppleIdentityToken = input.ReadString();
            break;
          }
          case 18: {
            AppleAuthorizationCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SBindApple : pb::IMessage {
    private static readonly pb::MessageParser<SBindApple> _parser = new pb::MessageParser<SBindApple>(() => new SBindApple());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SBindApple> Parser { get { return _parser; } }

    /// <summary>Field number for the "apple_account_id" field.</summary>
    public const int AppleAccountIdFieldNumber = 17;
    private string appleAccountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppleAccountId {
      get { return appleAccountId_; }
      set {
        appleAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppleAccountId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AppleAccountId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppleAccountId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppleAccountId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 138: {
            AppleAccountId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class CUnbindApple : pb::IMessage {
    private static readonly pb::MessageParser<CUnbindApple> _parser = new pb::MessageParser<CUnbindApple>(() => new CUnbindApple());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CUnbindApple> Parser { get { return _parser; } }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SUnbindApple : pb::IMessage {
    private static readonly pb::MessageParser<SUnbindApple> _parser = new pb::MessageParser<SUnbindApple>(() => new SUnbindApple());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SUnbindApple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CInviteFinished : pb::IMessage {
    private static readonly pb::MessageParser<CInviteFinished> _parser = new pb::MessageParser<CInviteFinished>(() => new CInviteFinished());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CInviteFinished> Parser { get { return _parser; } }

    /// <summary>Field number for the "invite_code" field.</summary>
    public const int InviteCodeFieldNumber = 1;
    private string inviteCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviteCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviteCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviteCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InviteCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SInviteFinished : pb::IMessage {
    private static readonly pb::MessageParser<SInviteFinished> _parser = new pb::MessageParser<SInviteFinished>(() => new SInviteFinished());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SInviteFinished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CListInvited : pb::IMessage {
    private static readonly pb::MessageParser<CListInvited> _parser = new pb::MessageParser<CListInvited>(() => new CListInvited());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CListInvited> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class SListInvited : pb::IMessage {
    private static readonly pb::MessageParser<SListInvited> _parser = new pb::MessageParser<SListInvited>(() => new SListInvited());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SListInvited> Parser { get { return _parser; } }

    /// <summary>Field number for the "invited" field.</summary>
    public const int InvitedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DragonU3DSDK.Network.API.ILProtocol.SListInvited.Types.Invited> _repeated_invited_codec
        = pb::FieldCodec.ForMessage(10, global::DragonU3DSDK.Network.API.ILProtocol.SListInvited.Types.Invited.Parser);
    private readonly pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SListInvited.Types.Invited> invited_ = new pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SListInvited.Types.Invited>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SListInvited.Types.Invited> Invited {
      get { return invited_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      invited_.WriteTo(output, _repeated_invited_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += invited_.CalculateSize(_repeated_invited_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            invited_.AddEntriesFrom(input, _repeated_invited_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SListInvited message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static class Types {
      public sealed class Invited : pb::IMessage {
        private static readonly pb::MessageParser<Invited> _parser = new pb::MessageParser<Invited>(() => new Invited());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Invited> Parser { get { return _parser; } }

        /// <summary>Field number for the "player_id" field.</summary>
        public const int PlayerIdFieldNumber = 1;
        private ulong playerId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong PlayerId {
          get { return playerId_; }
          set {
            playerId_ = value;
          }
        }

        /// <summary>Field number for the "facebook_id" field.</summary>
        public const int FacebookIdFieldNumber = 2;
        private string facebookId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FacebookId {
          get { return facebookId_; }
          set {
            facebookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "finished" field.</summary>
        public const int FinishedFieldNumber = 3;
        private uint finished_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Finished {
          get { return finished_; }
          set {
            finished_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PlayerId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(PlayerId);
          }
          if (FacebookId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FacebookId);
          }
          if (Finished != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Finished);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PlayerId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
          }
          if (FacebookId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookId);
          }
          if (Finished != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Finished);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                PlayerId = input.ReadUInt64();
                break;
              }
              case 18: {
                FacebookId = input.ReadString();
                break;
              }
              case 24: {
                Finished = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed class CBindFirebase : pb::IMessage {
    private static readonly pb::MessageParser<CBindFirebase> _parser = new pb::MessageParser<CBindFirebase>(() => new CBindFirebase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBindFirebase> Parser { get { return _parser; } }

    /// <summary>Field number for the "firebase_instance_id" field.</summary>
    public const int FirebaseInstanceIdFieldNumber = 1;
    private string firebaseInstanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirebaseInstanceId {
      get { return firebaseInstanceId_; }
      set {
        firebaseInstanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirebaseInstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirebaseInstanceId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirebaseInstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirebaseInstanceId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FirebaseInstanceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SBindFirebase : pb::IMessage {
    private static readonly pb::MessageParser<SBindFirebase> _parser = new pb::MessageParser<SBindFirebase>(() => new SBindFirebase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SBindFirebase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class PlayerProperties : pb::IMessage {
    private static readonly pb::MessageParser<PlayerProperties> _parser = new pb::MessageParser<PlayerProperties>(() => new PlayerProperties());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerProperties> Parser { get { return _parser; } }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_type" field.</summary>
    public const int PlayerTypeFieldNumber = 2;
    private uint playerType_;
    /// <summary>
    /// 0) 游客玩家：GUEST；1) 绑定 fb：FACEBOOK；2) 注册游戏：EMAIL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerType {
      get { return playerType_; }
      set {
        playerType_ = value;
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 3;
    private string app_ = "";
    /// <summary>
    /// 应用名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string App {
      get { return app_; }
      set {
        app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 4;
    private string country_ = "";
    /// <summary>
    /// 国家地区
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 5;
    private string platform_ = "";
    /// <summary>
    /// 应用平台
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "installed_at" field.</summary>
    public const int InstalledAtFieldNumber = 6;
    private ulong installedAt_;
    /// <summary>
    /// 玩家建号日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InstalledAt {
      get { return installedAt_; }
      set {
        installedAt_ = value;
      }
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 7;
    private string clientVersion_ = "";
    /// <summary>
    /// 应用版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "res_version" field.</summary>
    public const int ResVersionFieldNumber = 8;
    private string resVersion_ = "";
    /// <summary>
    /// 资源版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResVersion {
      get { return resVersion_; }
      set {
        resVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 9;
    private string deviceId_ = "";
    /// <summary>
    /// 设备ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_memory" field.</summary>
    public const int DeviceMemoryFieldNumber = 10;
    private string deviceMemory_ = "";
    /// <summary>
    /// 设备容量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceMemory {
      get { return deviceMemory_; }
      set {
        deviceMemory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_model" field.</summary>
    public const int DeviceModelFieldNumber = 11;
    private string deviceModel_ = "";
    /// <summary>
    /// 设备机型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceModel {
      get { return deviceModel_; }
      set {
        deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_type" field.</summary>
    public const int DeviceTypeFieldNumber = 12;
    private string deviceType_ = "";
    /// <summary>
    /// 设备类型(pad/phone)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_os_version" field.</summary>
    public const int DeviceOsVersionFieldNumber = 13;
    private string deviceOsVersion_ = "";
    /// <summary>
    /// 系统版本号，例：7.1.3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceOsVersion {
      get { return deviceOsVersion_; }
      set {
        deviceOsVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_language" field.</summary>
    public const int DeviceLanguageFieldNumber = 14;
    private string deviceLanguage_ = "";
    /// <summary>
    /// 语言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceLanguage {
      get { return deviceLanguage_; }
      set {
        deviceLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 15;
    private string networkType_ = "";
    /// <summary>
    /// 网络类型：2G,edge,3G,4G,LTE,wifi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkType {
      get { return networkType_; }
      set {
        networkType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 16;
    private string email_ = "";
    /// <summary>
    /// 注册邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_email" field.</summary>
    public const int FacebookEmailFieldNumber = 17;
    private string facebookEmail_ = "";
    /// <summary>
    /// FB邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookEmail {
      get { return facebookEmail_; }
      set {
        facebookEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_name" field.</summary>
    public const int FacebookNameFieldNumber = 18;
    private string facebookName_ = "";
    /// <summary>
    /// FB昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookName {
      get { return facebookName_; }
      set {
        facebookName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facebook_id" field.</summary>
    public const int FacebookIdFieldNumber = 19;
    private string facebookId_ = "";
    /// <summary>
    /// FB账号ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookId {
      get { return facebookId_; }
      set {
        facebookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_network" field.</summary>
    public const int SourceNetworkFieldNumber = 20;
    private string sourceNetwork_ = "";
    /// <summary>
    /// 渠道广告平台
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceNetwork {
      get { return sourceNetwork_; }
      set {
        sourceNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_campaign" field.</summary>
    public const int SourceCampaignFieldNumber = 21;
    private string sourceCampaign_ = "";
    /// <summary>
    /// 渠道广告活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceCampaign {
      get { return sourceCampaign_; }
      set {
        sourceCampaign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_adgroup" field.</summary>
    public const int SourceAdgroupFieldNumber = 22;
    private string sourceAdgroup_ = "";
    /// <summary>
    /// 渠道广告组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceAdgroup {
      get { return sourceAdgroup_; }
      set {
        sourceAdgroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_creative" field.</summary>
    public const int SourceCreativeFieldNumber = 23;
    private string sourceCreative_ = "";
    /// <summary>
    /// 渠道广告创意组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceCreative {
      get { return sourceCreative_; }
      set {
        sourceCreative_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_pay_date" field.</summary>
    public const int FirstPayDateFieldNumber = 24;
    private ulong firstPayDate_;
    /// <summary>
    /// 首次付费时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FirstPayDate {
      get { return firstPayDate_; }
      set {
        firstPayDate_ = value;
      }
    }

    /// <summary>Field number for the "last_pay_date" field.</summary>
    public const int LastPayDateFieldNumber = 25;
    private ulong lastPayDate_;
    /// <summary>
    /// 最近付费时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastPayDate {
      get { return lastPayDate_; }
      set {
        lastPayDate_ = value;
      }
    }

    /// <summary>Field number for the "iap_total" field.</summary>
    public const int IapTotalFieldNumber = 26;
    private ulong iapTotal_;
    /// <summary>
    /// 总消费次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IapTotal {
      get { return iapTotal_; }
      set {
        iapTotal_ = value;
      }
    }

    /// <summary>Field number for the "iap_count" field.</summary>
    public const int IapCountFieldNumber = 27;
    private ulong iapCount_;
    /// <summary>
    /// 总消费金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IapCount {
      get { return iapCount_; }
      set {
        iapCount_ = value;
      }
    }

    /// <summary>Field number for the "most_pay_product_id" field.</summary>
    public const int MostPayProductIdFieldNumber = 28;
    private string mostPayProductId_ = "";
    /// <summary>
    /// 最多消费商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MostPayProductId {
      get { return mostPayProductId_; }
      set {
        mostPayProductId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recent_pay_product_id" field.</summary>
    public const int RecentPayProductIdFieldNumber = 29;
    private string recentPayProductId_ = "";
    /// <summary>
    /// 最近消费商品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecentPayProductId {
      get { return recentPayProductId_; }
      set {
        recentPayProductId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_interstitial_ads_date" field.</summary>
    public const int LastInterstitialAdsDateFieldNumber = 30;
    private ulong lastInterstitialAdsDate_;
    /// <summary>
    /// 最近观看插屏广告时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastInterstitialAdsDate {
      get { return lastInterstitialAdsDate_; }
      set {
        lastInterstitialAdsDate_ = value;
      }
    }

    /// <summary>Field number for the "last_interstitial_ads_placement" field.</summary>
    public const int LastInterstitialAdsPlacementFieldNumber = 31;
    private string lastInterstitialAdsPlacement_ = "";
    /// <summary>
    /// 最近观看插屏广告位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastInterstitialAdsPlacement {
      get { return lastInterstitialAdsPlacement_; }
      set {
        lastInterstitialAdsPlacement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interstitial_ads_count" field.</summary>
    public const int InterstitialAdsCountFieldNumber = 32;
    private ulong interstitialAdsCount_;
    /// <summary>
    /// 总观看插屏广告次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InterstitialAdsCount {
      get { return interstitialAdsCount_; }
      set {
        interstitialAdsCount_ = value;
      }
    }

    /// <summary>Field number for the "most_interstitial_ads_placement" field.</summary>
    public const int MostInterstitialAdsPlacementFieldNumber = 33;
    private string mostInterstitialAdsPlacement_ = "";
    /// <summary>
    /// 最多观看插屏广告位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MostInterstitialAdsPlacement {
      get { return mostInterstitialAdsPlacement_; }
      set {
        mostInterstitialAdsPlacement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_reward_video_date" field.</summary>
    public const int LastRewardVideoDateFieldNumber = 34;
    private ulong lastRewardVideoDate_;
    /// <summary>
    /// 最近观看激励视频时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastRewardVideoDate {
      get { return lastRewardVideoDate_; }
      set {
        lastRewardVideoDate_ = value;
      }
    }

    /// <summary>Field number for the "last_reward_video_placement" field.</summary>
    public const int LastRewardVideoPlacementFieldNumber = 35;
    private string lastRewardVideoPlacement_ = "";
    /// <summary>
    /// 最近观看激励视频位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastRewardVideoPlacement {
      get { return lastRewardVideoPlacement_; }
      set {
        lastRewardVideoPlacement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_video_count" field.</summary>
    public const int RewardVideoCountFieldNumber = 36;
    private ulong rewardVideoCount_;
    /// <summary>
    /// 总观看激励视频次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RewardVideoCount {
      get { return rewardVideoCount_; }
      set {
        rewardVideoCount_ = value;
      }
    }

    /// <summary>Field number for the "most_reward_video_placement" field.</summary>
    public const int MostRewardVideoPlacementFieldNumber = 37;
    private string mostRewardVideoPlacement_ = "";
    /// <summary>
    /// 最多观看激励视频位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MostRewardVideoPlacement {
      get { return mostRewardVideoPlacement_; }
      set {
        mostRewardVideoPlacement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_login_date" field.</summary>
    public const int LastLoginDateFieldNumber = 38;
    private ulong lastLoginDate_;
    /// <summary>
    /// 最近登录日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastLoginDate {
      get { return lastLoginDate_; }
      set {
        lastLoginDate_ = value;
      }
    }

    /// <summary>Field number for the "login_time" field.</summary>
    public const int LoginTimeFieldNumber = 39;
    private ulong loginTime_;
    /// <summary>
    /// 登录总时长(s)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LoginTime {
      get { return loginTime_; }
      set {
        loginTime_ = value;
      }
    }

    /// <summary>Field number for the "login_count" field.</summary>
    public const int LoginCountFieldNumber = 40;
    private ulong loginCount_;
    /// <summary>
    /// 登录总次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LoginCount {
      get { return loginCount_; }
      set {
        loginCount_ = value;
      }
    }

    /// <summary>Field number for the "login_days" field.</summary>
    public const int LoginDaysFieldNumber = 41;
    private ulong loginDays_;
    /// <summary>
    /// 登录总天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LoginDays {
      get { return loginDays_; }
      set {
        loginDays_ = value;
      }
    }

    /// <summary>Field number for the "last_level_date" field.</summary>
    public const int LastLevelDateFieldNumber = 42;
    private ulong lastLevelDate_;
    /// <summary>
    /// 最近关卡日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastLevelDate {
      get { return lastLevelDate_; }
      set {
        lastLevelDate_ = value;
      }
    }

    /// <summary>Field number for the "max_level_id" field.</summary>
    public const int MaxLevelIdFieldNumber = 43;
    private ulong maxLevelId_;
    /// <summary>
    /// 最大关卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxLevelId {
      get { return maxLevelId_; }
      set {
        maxLevelId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerType);
      }
      if (App.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(App);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Country);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (InstalledAt != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(InstalledAt);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClientVersion);
      }
      if (ResVersion.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ResVersion);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DeviceId);
      }
      if (DeviceMemory.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DeviceMemory);
      }
      if (DeviceModel.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DeviceModel);
      }
      if (DeviceType.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DeviceType);
      }
      if (DeviceOsVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DeviceOsVersion);
      }
      if (DeviceLanguage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DeviceLanguage);
      }
      if (NetworkType.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(NetworkType);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Email);
      }
      if (FacebookEmail.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(FacebookEmail);
      }
      if (FacebookName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(FacebookName);
      }
      if (FacebookId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(FacebookId);
      }
      if (SourceNetwork.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(SourceNetwork);
      }
      if (SourceCampaign.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(SourceCampaign);
      }
      if (SourceAdgroup.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(SourceAdgroup);
      }
      if (SourceCreative.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(SourceCreative);
      }
      if (FirstPayDate != 0UL) {
        output.WriteRawTag(192, 1);
        output.WriteUInt64(FirstPayDate);
      }
      if (LastPayDate != 0UL) {
        output.WriteRawTag(200, 1);
        output.WriteUInt64(LastPayDate);
      }
      if (IapTotal != 0UL) {
        output.WriteRawTag(208, 1);
        output.WriteUInt64(IapTotal);
      }
      if (IapCount != 0UL) {
        output.WriteRawTag(216, 1);
        output.WriteUInt64(IapCount);
      }
      if (MostPayProductId.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(MostPayProductId);
      }
      if (RecentPayProductId.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(RecentPayProductId);
      }
      if (LastInterstitialAdsDate != 0UL) {
        output.WriteRawTag(240, 1);
        output.WriteUInt64(LastInterstitialAdsDate);
      }
      if (LastInterstitialAdsPlacement.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(LastInterstitialAdsPlacement);
      }
      if (InterstitialAdsCount != 0UL) {
        output.WriteRawTag(128, 2);
        output.WriteUInt64(InterstitialAdsCount);
      }
      if (MostInterstitialAdsPlacement.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(MostInterstitialAdsPlacement);
      }
      if (LastRewardVideoDate != 0UL) {
        output.WriteRawTag(144, 2);
        output.WriteUInt64(LastRewardVideoDate);
      }
      if (LastRewardVideoPlacement.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(LastRewardVideoPlacement);
      }
      if (RewardVideoCount != 0UL) {
        output.WriteRawTag(160, 2);
        output.WriteUInt64(RewardVideoCount);
      }
      if (MostRewardVideoPlacement.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(MostRewardVideoPlacement);
      }
      if (LastLoginDate != 0UL) {
        output.WriteRawTag(176, 2);
        output.WriteUInt64(LastLoginDate);
      }
      if (LoginTime != 0UL) {
        output.WriteRawTag(184, 2);
        output.WriteUInt64(LoginTime);
      }
      if (LoginCount != 0UL) {
        output.WriteRawTag(192, 2);
        output.WriteUInt64(LoginCount);
      }
      if (LoginDays != 0UL) {
        output.WriteRawTag(200, 2);
        output.WriteUInt64(LoginDays);
      }
      if (LastLevelDate != 0UL) {
        output.WriteRawTag(208, 2);
        output.WriteUInt64(LastLevelDate);
      }
      if (MaxLevelId != 0UL) {
        output.WriteRawTag(216, 2);
        output.WriteUInt64(MaxLevelId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerType);
      }
      if (App.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (InstalledAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InstalledAt);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (ResVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResVersion);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (DeviceMemory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceMemory);
      }
      if (DeviceModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
      }
      if (DeviceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceType);
      }
      if (DeviceOsVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceOsVersion);
      }
      if (DeviceLanguage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceLanguage);
      }
      if (NetworkType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkType);
      }
      if (Email.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (FacebookEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FacebookEmail);
      }
      if (FacebookName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FacebookName);
      }
      if (FacebookId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FacebookId);
      }
      if (SourceNetwork.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SourceNetwork);
      }
      if (SourceCampaign.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SourceCampaign);
      }
      if (SourceAdgroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SourceAdgroup);
      }
      if (SourceCreative.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SourceCreative);
      }
      if (FirstPayDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(FirstPayDate);
      }
      if (LastPayDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastPayDate);
      }
      if (IapTotal != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(IapTotal);
      }
      if (IapCount != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(IapCount);
      }
      if (MostPayProductId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MostPayProductId);
      }
      if (RecentPayProductId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RecentPayProductId);
      }
      if (LastInterstitialAdsDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastInterstitialAdsDate);
      }
      if (LastInterstitialAdsPlacement.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastInterstitialAdsPlacement);
      }
      if (InterstitialAdsCount != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(InterstitialAdsCount);
      }
      if (MostInterstitialAdsPlacement.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MostInterstitialAdsPlacement);
      }
      if (LastRewardVideoDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastRewardVideoDate);
      }
      if (LastRewardVideoPlacement.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastRewardVideoPlacement);
      }
      if (RewardVideoCount != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(RewardVideoCount);
      }
      if (MostRewardVideoPlacement.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MostRewardVideoPlacement);
      }
      if (LastLoginDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastLoginDate);
      }
      if (LoginTime != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LoginTime);
      }
      if (LoginCount != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LoginCount);
      }
      if (LoginDays != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LoginDays);
      }
      if (LastLevelDate != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastLevelDate);
      }
      if (MaxLevelId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(MaxLevelId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 16: {
            PlayerType = input.ReadUInt32();
            break;
          }
          case 26: {
            App = input.ReadString();
            break;
          }
          case 34: {
            Country = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 48: {
            InstalledAt = input.ReadUInt64();
            break;
          }
          case 58: {
            ClientVersion = input.ReadString();
            break;
          }
          case 66: {
            ResVersion = input.ReadString();
            break;
          }
          case 74: {
            DeviceId = input.ReadString();
            break;
          }
          case 82: {
            DeviceMemory = input.ReadString();
            break;
          }
          case 90: {
            DeviceModel = input.ReadString();
            break;
          }
          case 98: {
            DeviceType = input.ReadString();
            break;
          }
          case 106: {
            DeviceOsVersion = input.ReadString();
            break;
          }
          case 114: {
            DeviceLanguage = input.ReadString();
            break;
          }
          case 122: {
            NetworkType = input.ReadString();
            break;
          }
          case 130: {
            Email = input.ReadString();
            break;
          }
          case 138: {
            FacebookEmail = input.ReadString();
            break;
          }
          case 146: {
            FacebookName = input.ReadString();
            break;
          }
          case 154: {
            FacebookId = input.ReadString();
            break;
          }
          case 162: {
            SourceNetwork = input.ReadString();
            break;
          }
          case 170: {
            SourceCampaign = input.ReadString();
            break;
          }
          case 178: {
            SourceAdgroup = input.ReadString();
            break;
          }
          case 186: {
            SourceCreative = input.ReadString();
            break;
          }
          case 192: {
            FirstPayDate = input.ReadUInt64();
            break;
          }
          case 200: {
            LastPayDate = input.ReadUInt64();
            break;
          }
          case 208: {
            IapTotal = input.ReadUInt64();
            break;
          }
          case 216: {
            IapCount = input.ReadUInt64();
            break;
          }
          case 226: {
            MostPayProductId = input.ReadString();
            break;
          }
          case 234: {
            RecentPayProductId = input.ReadString();
            break;
          }
          case 240: {
            LastInterstitialAdsDate = input.ReadUInt64();
            break;
          }
          case 250: {
            LastInterstitialAdsPlacement = input.ReadString();
            break;
          }
          case 256: {
            InterstitialAdsCount = input.ReadUInt64();
            break;
          }
          case 266: {
            MostInterstitialAdsPlacement = input.ReadString();
            break;
          }
          case 272: {
            LastRewardVideoDate = input.ReadUInt64();
            break;
          }
          case 282: {
            LastRewardVideoPlacement = input.ReadString();
            break;
          }
          case 288: {
            RewardVideoCount = input.ReadUInt64();
            break;
          }
          case 298: {
            MostRewardVideoPlacement = input.ReadString();
            break;
          }
          case 304: {
            LastLoginDate = input.ReadUInt64();
            break;
          }
          case 312: {
            LoginTime = input.ReadUInt64();
            break;
          }
          case 320: {
            LoginCount = input.ReadUInt64();
            break;
          }
          case 328: {
            LoginDays = input.ReadUInt64();
            break;
          }
          case 336: {
            LastLevelDate = input.ReadUInt64();
            break;
          }
          case 344: {
            MaxLevelId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed class CGetPlayerProperties : pb::IMessage {
    private static readonly pb::MessageParser<CGetPlayerProperties> _parser = new pb::MessageParser<CGetPlayerProperties>(() => new CGetPlayerProperties());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CGetPlayerProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class SGetPlayerProperties : pb::IMessage {
    private static readonly pb::MessageParser<SGetPlayerProperties> _parser = new pb::MessageParser<SGetPlayerProperties>(() => new SGetPlayerProperties());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SGetPlayerProperties> Parser { get { return _parser; } }

    /// <summary>Field number for the "player_properties" field.</summary>
    public const int PlayerPropertiesFieldNumber = 2;
    private global::DragonU3DSDK.Network.API.ILProtocol.PlayerProperties playerProperties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DragonU3DSDK.Network.API.ILProtocol.PlayerProperties PlayerProperties {
      get { return playerProperties_; }
      set {
        playerProperties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerProperties_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerProperties);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerProperties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerProperties);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (playerProperties_ == null) {
              playerProperties_ = new global::DragonU3DSDK.Network.API.ILProtocol.PlayerProperties();
            }
            input.ReadMessage(playerProperties_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ABTest trick（获取玩家参与过的实验分组名称）
  /// </summary>
  public sealed class CGetTestGroups : pb::IMessage {
    private static readonly pb::MessageParser<CGetTestGroups> _parser = new pb::MessageParser<CGetTestGroups>(() => new CGetTestGroups());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CGetTestGroups> Parser { get { return _parser; } }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SGetTestGroups : pb::IMessage {
    private static readonly pb::MessageParser<SGetTestGroups> _parser = new pb::MessageParser<SGetTestGroups>(() => new SGetTestGroups());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SGetTestGroups> Parser { get { return _parser; } }

    /// <summary>Field number for the "group_ids" field.</summary>
    public const int GroupIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_groupIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> groupIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GroupIds {
      get { return groupIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      groupIds_.WriteTo(output, _repeated_groupIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += groupIds_.CalculateSize(_repeated_groupIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            groupIds_.AddEntriesFrom(input, _repeated_groupIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
