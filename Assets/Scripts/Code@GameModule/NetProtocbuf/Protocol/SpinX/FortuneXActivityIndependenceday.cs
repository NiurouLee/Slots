// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fortune_x_activity_independenceday.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ilruntime.Protobuf;
using pbc = global::Google.ilruntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace DragonU3DSDK.Network.API.ILProtocol {

  #region Messages
  /// <summary>
  /// 独立日活动，除部分命名外，数据结构同情人节活动相同
  /// </summary>
  public sealed class IndependenceDayActivityConfigPB : pb::IMessage {
    private static readonly pb::MessageParser<IndependenceDayActivityConfigPB> _parser = new pb::MessageParser<IndependenceDayActivityConfigPB>(() => new IndependenceDayActivityConfigPB());
    public static pb::MessageParser<IndependenceDayActivityConfigPB> Parser { get { return _parser; } }

    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private long levelLimited_;
    public long LevelLimited {
      get { return levelLimited_; }
      set {
        levelLimited_ = value;
      }
    }

    private uint paymentId_;
    /// <summary>
    /// 获取高级奖励所需购买的商品标识
    /// </summary>
    public uint PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = value;
      }
    }

    private long startTimestamp_;
    public long StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    private long endTimestamp_;
    public long EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (LevelLimited != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LevelLimited);
      }
      if (PaymentId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PaymentId);
      }
      if (StartTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTimestamp);
      }
      if (EndTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTimestamp);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (LevelLimited != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LevelLimited);
      }
      if (PaymentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaymentId);
      }
      if (StartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (EndTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimestamp);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            LevelLimited = input.ReadInt64();
            break;
          }
          case 24: {
            PaymentId = input.ReadUInt32();
            break;
          }
          case 32: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 40: {
            EndTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed class IndependenceDayActivityDataPB : pb::IMessage {
    private static readonly pb::MessageParser<IndependenceDayActivityDataPB> _parser = new pb::MessageParser<IndependenceDayActivityDataPB>(() => new IndependenceDayActivityDataPB());
    public static pb::MessageParser<IndependenceDayActivityDataPB> Parser { get { return _parser; } }

    private uint paymentId_;
    /// <summary>
    /// 获取高级奖励所需购买的商品标识
    /// </summary>
    public uint PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = value;
      }
    }

    private bool paymentAlreadyPaid_;
    /// <summary>
    /// 对应商品是否已经买过
    /// </summary>
    public bool PaymentAlreadyPaid {
      get { return paymentAlreadyPaid_; }
      set {
        paymentAlreadyPaid_ = value;
      }
    }

    private bool stepAlreadyBiggest_;
    /// <summary>
    /// 步数是否已经达到最大值
    /// </summary>
    public bool StepAlreadyBiggest {
      get { return stepAlreadyBiggest_; }
      set {
        stepAlreadyBiggest_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (PaymentId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PaymentId);
      }
      if (PaymentAlreadyPaid != false) {
        output.WriteRawTag(32);
        output.WriteBool(PaymentAlreadyPaid);
      }
      if (StepAlreadyBiggest != false) {
        output.WriteRawTag(40);
        output.WriteBool(StepAlreadyBiggest);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (PaymentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaymentId);
      }
      if (PaymentAlreadyPaid != false) {
        size += 1 + 1;
      }
      if (StepAlreadyBiggest != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 24: {
            PaymentId = input.ReadUInt32();
            break;
          }
          case 32: {
            PaymentAlreadyPaid = input.ReadBool();
            break;
          }
          case 40: {
            StepAlreadyBiggest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 情人节活动主页面调用
  /// </summary>
  public sealed class CGetIndependenceDayMainPageInfo : pb::IMessage {
    private static readonly pb::MessageParser<CGetIndependenceDayMainPageInfo> _parser = new pb::MessageParser<CGetIndependenceDayMainPageInfo>(() => new CGetIndependenceDayMainPageInfo());
    public static pb::MessageParser<CGetIndependenceDayMainPageInfo> Parser { get { return _parser; } }

    private string activityId_ = "";
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SGetIndependenceDayMainPageInfo : pb::IMessage {
    private static readonly pb::MessageParser<SGetIndependenceDayMainPageInfo> _parser = new pb::MessageParser<SGetIndependenceDayMainPageInfo>(() => new SGetIndependenceDayMainPageInfo());
    public static pb::MessageParser<SGetIndependenceDayMainPageInfo> Parser { get { return _parser; } }

    private uint step_;
    /// <summary>
    /// 拥有的步数 默认为0
    /// </summary>
    public uint Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    private uint normalRewardsReceivedStep_;
    /// <summary>
    ///普通奖励领取到的步数 默认为0 用于判断红心上是否需要打钩
    /// </summary>
    public uint NormalRewardsReceivedStep {
      get { return normalRewardsReceivedStep_; }
      set {
        normalRewardsReceivedStep_ = value;
      }
    }

    private uint paymentId_;
    /// <summary>
    /// 获取高级奖励所需购买的商品标识
    /// </summary>
    public uint PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = value;
      }
    }

    private bool paymentAlreadyPaid_;
    /// <summary>
    /// 对应商品是否已经买过
    /// </summary>
    public bool PaymentAlreadyPaid {
      get { return paymentAlreadyPaid_; }
      set {
        paymentAlreadyPaid_ = value;
      }
    }

    private long activityStartTimestamp_;
    /// <summary>
    /// 活动开始时间
    /// </summary>
    public long ActivityStartTimestamp {
      get { return activityStartTimestamp_; }
      set {
        activityStartTimestamp_ = value;
      }
    }

    private long activityEndTimestamp_;
    /// <summary>
    /// 活动结束时间
    /// </summary>
    public long ActivityEndTimestamp {
      get { return activityEndTimestamp_; }
      set {
        activityEndTimestamp_ = value;
      }
    }

    private long serverTimeSeconds_;
    /// <summary>
    /// 服务器当前时间UTC
    /// </summary>
    public long ServerTimeSeconds {
      get { return serverTimeSeconds_; }
      set {
        serverTimeSeconds_ = value;
      }
    }

    private static readonly pb::FieldCodec<global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward> _repeated_independenceRewards_codec
        = pb::FieldCodec.ForMessage(66, global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Parser);
    private readonly pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward> independenceRewards_ = new pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward>();
    /// <summary>
    /// 奖励列表
    /// </summary>
    public pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward> IndependenceRewards {
      get { return independenceRewards_; }
    }

    private uint stepMax_;
    /// <summary>
    /// 地图上最大的步数
    /// </summary>
    public uint StepMax {
      get { return stepMax_; }
      set {
        stepMax_ = value;
      }
    }

    private uint specialRewardsReceivedStep_;
    /// <summary>
    ///特殊奖励领取到的步数 默认为0
    /// </summary>
    public uint SpecialRewardsReceivedStep {
      get { return specialRewardsReceivedStep_; }
      set {
        specialRewardsReceivedStep_ = value;
      }
    }

    private global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig payItem_;
    /// <summary>
    /// 情人节活动的支付项信息
    /// </summary>
    public global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig PayItem {
      get { return payItem_; }
      set {
        payItem_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Step != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Step);
      }
      if (NormalRewardsReceivedStep != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NormalRewardsReceivedStep);
      }
      if (PaymentId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PaymentId);
      }
      if (PaymentAlreadyPaid != false) {
        output.WriteRawTag(32);
        output.WriteBool(PaymentAlreadyPaid);
      }
      if (ActivityStartTimestamp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ActivityStartTimestamp);
      }
      if (ActivityEndTimestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ActivityEndTimestamp);
      }
      if (ServerTimeSeconds != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ServerTimeSeconds);
      }
      independenceRewards_.WriteTo(output, _repeated_independenceRewards_codec);
      if (StepMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(StepMax);
      }
      if (SpecialRewardsReceivedStep != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(SpecialRewardsReceivedStep);
      }
      if (payItem_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PayItem);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
      }
      if (NormalRewardsReceivedStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NormalRewardsReceivedStep);
      }
      if (PaymentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaymentId);
      }
      if (PaymentAlreadyPaid != false) {
        size += 1 + 1;
      }
      if (ActivityStartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityStartTimestamp);
      }
      if (ActivityEndTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityEndTimestamp);
      }
      if (ServerTimeSeconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTimeSeconds);
      }
      size += independenceRewards_.CalculateSize(_repeated_independenceRewards_codec);
      if (StepMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StepMax);
      }
      if (SpecialRewardsReceivedStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpecialRewardsReceivedStep);
      }
      if (payItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayItem);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Step = input.ReadUInt32();
            break;
          }
          case 16: {
            NormalRewardsReceivedStep = input.ReadUInt32();
            break;
          }
          case 24: {
            PaymentId = input.ReadUInt32();
            break;
          }
          case 32: {
            PaymentAlreadyPaid = input.ReadBool();
            break;
          }
          case 40: {
            ActivityStartTimestamp = input.ReadInt64();
            break;
          }
          case 48: {
            ActivityEndTimestamp = input.ReadInt64();
            break;
          }
          case 56: {
            ServerTimeSeconds = input.ReadInt64();
            break;
          }
          case 66: {
            independenceRewards_.AddEntriesFrom(input, _repeated_independenceRewards_codec);
            break;
          }
          case 72: {
            StepMax = input.ReadUInt32();
            break;
          }
          case 80: {
            SpecialRewardsReceivedStep = input.ReadUInt32();
            break;
          }
          case 90: {
            if (payItem_ == null) {
              payItem_ = new global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig();
            }
            input.ReadMessage(payItem_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SGetIndependenceDayMainPageInfo message type.</summary>
    public static class Types {
      public sealed class IndependenceDayStepReward : pb::IMessage {
        private static readonly pb::MessageParser<IndependenceDayStepReward> _parser = new pb::MessageParser<IndependenceDayStepReward>(() => new IndependenceDayStepReward());
        public static pb::MessageParser<IndependenceDayStepReward> Parser { get { return _parser; } }

        private uint step_;
        /// <summary>
        /// 需要的步数
        /// </summary>
        public uint Step {
          get { return step_; }
          set {
            step_ = value;
          }
        }

        private global::DragonU3DSDK.Network.API.ILProtocol.Reward normalReward_;
        /// <summary>
        /// 普通奖励
        /// </summary>
        public global::DragonU3DSDK.Network.API.ILProtocol.Reward NormalReward {
          get { return normalReward_; }
          set {
            normalReward_ = value;
          }
        }

        private global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus normalRewardStatus_ = 0;
        /// <summary>
        /// 普通奖励领取状态 
        /// </summary>
        public global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus NormalRewardStatus {
          get { return normalRewardStatus_; }
          set {
            normalRewardStatus_ = value;
          }
        }

        private global::DragonU3DSDK.Network.API.ILProtocol.Reward specialReward_;
        /// <summary>
        /// 特殊奖励 
        /// </summary>
        public global::DragonU3DSDK.Network.API.ILProtocol.Reward SpecialReward {
          get { return specialReward_; }
          set {
            specialReward_ = value;
          }
        }

        private global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus specialRewardStatus_ = 0;
        /// <summary>
        /// 特殊奖励领取状态
        /// </summary>
        public global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus SpecialRewardStatus {
          get { return specialRewardStatus_; }
          set {
            specialRewardStatus_ = value;
          }
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Step != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Step);
          }
          if (normalReward_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(NormalReward);
          }
          if (NormalRewardStatus != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) NormalRewardStatus);
          }
          if (specialReward_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SpecialReward);
          }
          if (SpecialRewardStatus != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) SpecialRewardStatus);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Step != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
          }
          if (normalReward_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalReward);
          }
          if (NormalRewardStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NormalRewardStatus);
          }
          if (specialReward_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecialReward);
          }
          if (SpecialRewardStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpecialRewardStatus);
          }
          return size;
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Step = input.ReadUInt32();
                break;
              }
              case 18: {
                if (normalReward_ == null) {
                  normalReward_ = new global::DragonU3DSDK.Network.API.ILProtocol.Reward();
                }
                input.ReadMessage(normalReward_);
                break;
              }
              case 24: {
                normalRewardStatus_ = (global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus) input.ReadEnum();
                break;
              }
              case 34: {
                if (specialReward_ == null) {
                  specialReward_ = new global::DragonU3DSDK.Network.API.ILProtocol.Reward();
                }
                input.ReadMessage(specialReward_);
                break;
              }
              case 40: {
                specialRewardStatus_ = (global::DragonU3DSDK.Network.API.ILProtocol.SGetIndependenceDayMainPageInfo.Types.IndependenceDayStepReward.Types.IndependenceDayRewardStatus) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the IndependenceDayStepReward message type.</summary>
        public static class Types {
          public enum IndependenceDayRewardStatus {
            /// <summary>
            /// 锁定状态
            /// </summary>
            Locked = 0,
            /// <summary>
            /// 解锁 但未领取
            /// </summary>
            Unlocked = 1,
            /// <summary>
            /// 已领取
            /// </summary>
            Received = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// 获取情人节活动的奖励
  /// </summary>
  public sealed class CCollectIndependenceDayRewards : pb::IMessage {
    private static readonly pb::MessageParser<CCollectIndependenceDayRewards> _parser = new pb::MessageParser<CCollectIndependenceDayRewards>(() => new CCollectIndependenceDayRewards());
    public static pb::MessageParser<CCollectIndependenceDayRewards> Parser { get { return _parser; } }

    private string activityId_ = "";
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SCollectIndependenceDayRewards : pb::IMessage {
    private static readonly pb::MessageParser<SCollectIndependenceDayRewards> _parser = new pb::MessageParser<SCollectIndependenceDayRewards>(() => new SCollectIndependenceDayRewards());
    public static pb::MessageParser<SCollectIndependenceDayRewards> Parser { get { return _parser; } }

    private bool success_;
    /// <summary>
    /// 领取结果
    /// </summary>
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    private static readonly pb::FieldCodec<global::DragonU3DSDK.Network.API.ILProtocol.Reward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::DragonU3DSDK.Network.API.ILProtocol.Reward.Parser);
    private readonly pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward> rewards_ = new pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward>();
    /// <summary>
    /// 领取的奖励
    /// </summary>
    public pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward> Rewards {
      get { return rewards_; }
    }

    private global::DragonU3DSDK.Network.API.ILProtocol.UserProfile userProfile_;
    /// <summary>
    /// 用户数据
    /// </summary>
    public global::DragonU3DSDK.Network.API.ILProtocol.UserProfile UserProfile {
      get { return userProfile_; }
      set {
        userProfile_ = value;
      }
    }

    private static readonly pb::FieldCodec<global::DragonU3DSDK.Network.API.ILProtocol.Reward> _repeated_specialRewardsAfterPay_codec
        = pb::FieldCodec.ForMessage(34, global::DragonU3DSDK.Network.API.ILProtocol.Reward.Parser);
    private readonly pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward> specialRewardsAfterPay_ = new pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward>();
    /// <summary>
    ///在支付以后还能获取的奖励
    /// </summary>
    public pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Reward> SpecialRewardsAfterPay {
      get { return specialRewardsAfterPay_; }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (userProfile_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserProfile);
      }
      specialRewardsAfterPay_.WriteTo(output, _repeated_specialRewardsAfterPay_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (userProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserProfile);
      }
      size += specialRewardsAfterPay_.CalculateSize(_repeated_specialRewardsAfterPay_codec);
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
          case 26: {
            if (userProfile_ == null) {
              userProfile_ = new global::DragonU3DSDK.Network.API.ILProtocol.UserProfile();
            }
            input.ReadMessage(userProfile_);
            break;
          }
          case 34: {
            specialRewardsAfterPay_.AddEntriesFrom(input, _repeated_specialRewardsAfterPay_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取情人节活动的支付项信息
  /// </summary>
  public sealed class CGetIndependenceDayPayItemInfo : pb::IMessage {
    private static readonly pb::MessageParser<CGetIndependenceDayPayItemInfo> _parser = new pb::MessageParser<CGetIndependenceDayPayItemInfo>(() => new CGetIndependenceDayPayItemInfo());
    public static pb::MessageParser<CGetIndependenceDayPayItemInfo> Parser { get { return _parser; } }

    private string activityId_ = "";
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed class SGetIndependenceDayPayItemInfo : pb::IMessage {
    private static readonly pb::MessageParser<SGetIndependenceDayPayItemInfo> _parser = new pb::MessageParser<SGetIndependenceDayPayItemInfo>(() => new SGetIndependenceDayPayItemInfo());
    public static pb::MessageParser<SGetIndependenceDayPayItemInfo> Parser { get { return _parser; } }

    private global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig payItem_;
    public global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig PayItem {
      get { return payItem_; }
      set {
        payItem_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (payItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PayItem);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (payItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayItem);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (payItem_ == null) {
              payItem_ = new global::DragonU3DSDK.Network.API.ILProtocol.ShopItemConfig();
            }
            input.ReadMessage(payItem_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
