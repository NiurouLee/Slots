// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fortunex_guide.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ilruntime.Protobuf;
using pbc = global::Google.ilruntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace DragonU3DSDK.Network.API.ILProtocol {

  #region Messages
  public sealed class CGetGuide : pb::IMessage {
    private static readonly pb::MessageParser<CGetGuide> _parser = new pb::MessageParser<CGetGuide>(() => new CGetGuide());
    public static pb::MessageParser<CGetGuide> Parser { get { return _parser; } }

    public void WriteTo(pb::CodedOutputStream output) {
    }

    public int CalculateSize() {
      int size = 0;
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class GuideInfo : pb::IMessage {
    private static readonly pb::MessageParser<GuideInfo> _parser = new pb::MessageParser<GuideInfo>(() => new GuideInfo());
    public static pb::MessageParser<GuideInfo> Parser { get { return _parser; } }

    private static readonly pb::FieldCodec<global::DragonU3DSDK.Network.API.ILProtocol.Guide> _repeated_guides_codec
        = pb::FieldCodec.ForMessage(10, global::DragonU3DSDK.Network.API.ILProtocol.Guide.Parser);
    private readonly pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Guide> guides_ = new pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Guide>();
    /// <summary>
    /// guides
    /// </summary>
    public pbc::RepeatedField<global::DragonU3DSDK.Network.API.ILProtocol.Guide> Guides {
      get { return guides_; }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      guides_.WriteTo(output, _repeated_guides_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += guides_.CalculateSize(_repeated_guides_codec);
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            guides_.AddEntriesFrom(input, _repeated_guides_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class SGetGuide : pb::IMessage {
    private static readonly pb::MessageParser<SGetGuide> _parser = new pb::MessageParser<SGetGuide>(() => new SGetGuide());
    public static pb::MessageParser<SGetGuide> Parser { get { return _parser; } }

    private global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo guideInfo_;
    public global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (guideInfo_ == null) {
              guideInfo_ = new global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo();
            }
            input.ReadMessage(guideInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed class CCompleteGuide : pb::IMessage {
    private static readonly pb::MessageParser<CCompleteGuide> _parser = new pb::MessageParser<CCompleteGuide>(() => new CCompleteGuide());
    public static pb::MessageParser<CCompleteGuide> Parser { get { return _parser; } }

    private uint id_;
    /// <summary>
    /// guide id
    /// </summary>
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class SCompleteGuide : pb::IMessage {
    private static readonly pb::MessageParser<SCompleteGuide> _parser = new pb::MessageParser<SCompleteGuide>(() => new SCompleteGuide());
    public static pb::MessageParser<SCompleteGuide> Parser { get { return _parser; } }

    private global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo guideInfo_;
    public global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    private global::DragonU3DSDK.Network.API.ILProtocol.UserProfile userProfile_;
    /// <summary>
    /// 用户数据
    /// </summary>
    public global::DragonU3DSDK.Network.API.ILProtocol.UserProfile UserProfile {
      get { return userProfile_; }
      set {
        userProfile_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
      if (userProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserProfile);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (userProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserProfile);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (guideInfo_ == null) {
              guideInfo_ = new global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo();
            }
            input.ReadMessage(guideInfo_);
            break;
          }
          case 18: {
            if (userProfile_ == null) {
              userProfile_ = new global::DragonU3DSDK.Network.API.ILProtocol.UserProfile();
            }
            input.ReadMessage(userProfile_);
            break;
          }
        }
      }
    }

  }

  public sealed class CUpdateGuideStep : pb::IMessage {
    private static readonly pb::MessageParser<CUpdateGuideStep> _parser = new pb::MessageParser<CUpdateGuideStep>(() => new CUpdateGuideStep());
    public static pb::MessageParser<CUpdateGuideStep> Parser { get { return _parser; } }

    private uint id_;
    /// <summary>
    /// guide id
    /// </summary>
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    private uint step_;
    /// <summary>
    /// 进度更新
    /// </summary>
    public uint Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Step != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Step);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Step = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class SUpdateGuideStep : pb::IMessage {
    private static readonly pb::MessageParser<SUpdateGuideStep> _parser = new pb::MessageParser<SUpdateGuideStep>(() => new SUpdateGuideStep());
    public static pb::MessageParser<SUpdateGuideStep> Parser { get { return _parser; } }

    private global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo guideInfo_;
    public global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (guideInfo_ == null) {
              guideInfo_ = new global::DragonU3DSDK.Network.API.ILProtocol.GuideInfo();
            }
            input.ReadMessage(guideInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed class Guide : pb::IMessage {
    private static readonly pb::MessageParser<Guide> _parser = new pb::MessageParser<Guide>(() => new Guide());
    public static pb::MessageParser<Guide> Parser { get { return _parser; } }

    private uint id_;
    /// <summary>
    /// guide id
    /// </summary>
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    private string type_ = "";
    /// <summary>
    /// guide type
    /// </summary>
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private bool completed_;
    /// <summary>
    /// </summary>
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    private global::DragonU3DSDK.Network.API.ILProtocol.Reward reward_;
    /// <summary>
    /// 奖励
    /// </summary>
    public global::DragonU3DSDK.Network.API.ILProtocol.Reward Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    private static readonly pb::FieldCodec<uint> _repeated_preIds_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> preIds_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 前戏
    /// </summary>
    public pbc::RepeatedField<uint> PreIds {
      get { return preIds_; }
    }

    private uint step_;
    /// <summary>
    /// 进度
    /// </summary>
    public uint Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    private uint totalStep_;
    /// <summary>
    /// 总进度
    /// </summary>
    public uint TotalStep {
      get { return totalStep_; }
      set {
        totalStep_ = value;
      }
    }

    private string gameId_ = "";
    /// <summary>
    /// gameId
    /// </summary>
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Completed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Completed);
      }
      if (reward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reward);
      }
      preIds_.WriteTo(output, _repeated_preIds_codec);
      if (Step != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Step);
      }
      if (TotalStep != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TotalStep);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GameId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      size += preIds_.CalculateSize(_repeated_preIds_codec);
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
      }
      if (TotalStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalStep);
      }
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Completed = input.ReadBool();
            break;
          }
          case 34: {
            if (reward_ == null) {
              reward_ = new global::DragonU3DSDK.Network.API.ILProtocol.Reward();
            }
            input.ReadMessage(reward_);
            break;
          }
          case 42:
          case 40: {
            preIds_.AddEntriesFrom(input, _repeated_preIds_codec);
            break;
          }
          case 48: {
            Step = input.ReadUInt32();
            break;
          }
          case 56: {
            TotalStep = input.ReadUInt32();
            break;
          }
          case 66: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
