// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fortunex_jackpot.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ilruntime.Protobuf;
using pbc = global::Google.ilruntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace DragonU3DSDK.Network.API.ILProtocol {

  #region Messages
  public sealed class SJackpotNotification : pb::IMessage {
    private static readonly pb::MessageParser<SJackpotNotification> _parser = new pb::MessageParser<SJackpotNotification>(() => new SJackpotNotification());
    public static pb::MessageParser<SJackpotNotification> Parser { get { return _parser; } }

    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private uint avatarId_;
    /// <summary>
    /// 默认头像
    /// </summary>
    public uint AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    private string gameId_ = "";
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private ulong pay_;
    public ulong Pay {
      get { return pay_; }
      set {
        pay_ = value;
      }
    }

    private string avatarUrl_ = "";
    /// <summary>
    /// facebook头像url，没有就是空
    /// </summary>
    public string AvatarUrl {
      get { return avatarUrl_; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private string facebookId_ = "";
    /// <summary>
    ///* facebookId 注意用了string 没有facebookId就用"" 
    /// </summary>
    public string FacebookId {
      get { return facebookId_; }
      set {
        facebookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AvatarId);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameId);
      }
      if (Pay != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Pay);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvatarUrl);
      }
      if (FacebookId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FacebookId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarId);
      }
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (Pay != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Pay);
      }
      if (AvatarUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (FacebookId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookId);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            AvatarId = input.ReadUInt32();
            break;
          }
          case 26: {
            GameId = input.ReadString();
            break;
          }
          case 32: {
            Pay = input.ReadUInt64();
            break;
          }
          case 42: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 50: {
            FacebookId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
