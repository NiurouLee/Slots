// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ilruntime.Protobuf;
using pbc = global::Google.ilruntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace DragonU3DSDK.Network.API.ILProtocol {

  #region Enums
  public enum Platform {
    /// <summary>
    /// 
    /// </summary>
    Ios = 0,
    /// <summary>
    /// 
    /// </summary>
    Facebook = 1,
    /// <summary>
    /// 
    /// </summary>
    Amazon = 2,
    /// <summary>
    /// 
    /// </summary>
    Google = 3,
    /// <summary>
    /// 
    /// </summary>
    Wp8 = 4,
    /// <summary>
    /// 
    /// </summary>
    UnityEditor = 5,
  }

  public enum PlayerType {
    /// <summary>
    /// 
    /// </summary>
    Guest = 0,
    /// <summary>
    /// 
    /// </summary>
    Facebook = 1,
    /// <summary>
    /// 
    /// </summary>
    Email = 2,
  }

  #endregion

  #region Messages
  public sealed class ClientConfig : pb::IMessage {
    private static readonly pb::MessageParser<ClientConfig> _parser = new pb::MessageParser<ClientConfig>(() => new ClientConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientConfig> Parser { get { return _parser; } }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 1;
    private string json_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Json.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Json);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Json = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
